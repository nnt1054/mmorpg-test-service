# Default values for test-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: docker-registry.com:80/test-service
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: 0.1.0

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations:
    nginx.org/mergeable-ingress-type: "minion"
    nginx.org/rewrites: "serviceName=test-service rewrite=/"
  hosts:
    - host: docker-registry.com
      paths: 
        - "/test-service/"
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# keel:
#   # keel policy (all/major/minor/patch/force)
#   policy: force
#   match-tag: true
#   trigger: poll
#   pollSchedule: "@every 1m"
#   # images to track and update
#   images:
#     - repository: image.repository # [1]
#       tag: image.tag  # [2]

keel:
  # keel policy (all/major/minor/patch/force)
  policy: minor
  trigger: poll
  pollSchedule: "@every 1m"
  # images to track and update
  images:
    - repository: image.repository # [1]
      tag: image.tag  # [2]